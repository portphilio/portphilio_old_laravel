{"version":3,"sources":["bootstrap.js","ace.js","ace.sidebar.js","ace.settings.js","ace.settings-skin.js"],"names":[],"mappingszrhhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvfile":"dashboard.js","sourcesContent":["/*!\n * Bootstrap v3.3.5 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under the MIT license\n */\n\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n\n+function ($) {\n  'use strict';\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.5\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: alert.js v3.3.5\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.5'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: button.js v3.3.5\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.5'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: carousel.js v3.3.5\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.5'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.5\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.5'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.5\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.5'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: modal.js v3.3.5\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.5'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tooltip.js v3.3.5\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.5'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: popover.js v3.3.5\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.5'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.5\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.5'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.5\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.5'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: affix.js v3.3.5\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.5'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","/**\r\n Required. Ace's Basic File to Initiliaze Different Parts and Some Variables.\r\n*/\r\n\r\n\r\n//some basic variables\r\n(function(undefined) {\r\n\tif( !('ace' in window) ) window['ace'] = {}\r\n\tif( !('helper' in window['ace']) ) window['ace'].helper = {}\r\n\tif( !('vars' in window['ace']) ) window['ace'].vars = {}\r\n\twindow['ace'].vars['icon'] = ' ace-icon ';\r\n\twindow['ace'].vars['.icon'] = '.ace-icon';\r\n\r\n\tace.vars['touch']\t= ('ontouchstart' in window);//(('ontouchstart' in document.documentElement) || (window.DocumentTouch && document instanceof DocumentTouch));\r\n\t\r\n\t//sometimes the only good way to work around browser's pecularities is to detect them using user-agents\r\n\t//though it's not accurate\r\n\tvar agent = navigator.userAgent\r\n\tace.vars['webkit'] = !!agent.match(/AppleWebKit/i)\r\n\tace.vars['safari'] = !!agent.match(/Safari/i) && !agent.match(/Chrome/i);\r\n\tace.vars['android'] = ace.vars['safari'] && !!agent.match(/Android/i)\r\n\tace.vars['ios_safari'] = !!agent.match(/OS ([4-9])(_\\d)+ like Mac OS X/i) && !agent.match(/CriOS/i)\r\n\t\r\n\tace.vars['ie'] = window.navigator.msPointerEnabled || (document.all && document.querySelector);//8-11\r\n\tace.vars['old_ie'] = document.all && !document.addEventListener;//8 and below\r\n\tace.vars['very_old_ie']\t= document.all && !document.querySelector;//7 and below\r\n\tace.vars['firefox'] = 'MozAppearance' in document.documentElement.style;\r\n\t\r\n\tace.vars['non_auto_fixed'] = ace.vars['android'] || ace.vars['ios_safari'];\r\n})();\r\n\r\n\r\n\r\n(function($ , undefined) {\r\n\t//sometimes we try to use 'tap' event instead of 'click' if jquery mobile plugin is available\r\n\tace['click_event'] = ace.vars['touch'] && $.fn.tap ? 'tap' : 'click';\r\n})(jQuery);\r\n\r\n\r\n\r\n\r\n//document ready function\r\njQuery(function($) {\r\n\tbasics();\r\n\tenableSidebar();\r\n\t\r\n\tenableDemoAjax();\r\n\thandleScrollbars();\r\n\t\r\n\tdropdownAutoPos();\r\n\t\r\n\tnavbarHelpers();\r\n\tsidebarTooltips();\r\n\t\r\n\tscrollTopBtn();\r\n\t\r\n\tsomeBrowserFix();\r\n\t\r\n\tbsCollapseToggle();\r\n\tsmallDeviceDropdowns();\r\n\t\r\n\t////////////////////////////\r\n\r\n\tfunction basics() {\r\n\t\t// for android and ios we don't use \"top:auto\" when breadcrumbs is fixed\r\n\t\tif(ace.vars['non_auto_fixed']) {\r\n\t\t\t$('body').addClass('mob-safari');\r\n\t\t}\r\n\r\n\t\tace.vars['transition'] = !!$.support.transition.end\r\n\t}\r\n\t\r\n\tfunction enableSidebar() {\r\n\t\t//initiate sidebar function\r\n\t\tvar $sidebar = $('.sidebar');\r\n\t\tif($.fn.ace_sidebar) $sidebar.ace_sidebar();\r\n\t\tif($.fn.ace_sidebar_scroll) $sidebar.ace_sidebar_scroll({\r\n\t\t\t//for other options please see documentation\r\n\t\t\t'include_toggle': false || ace.vars['safari'] || ace.vars['ios_safari'] //true = include toggle button in the scrollbars\r\n\t\t});\r\n\t\tif($.fn.ace_sidebar_hover)\t$sidebar.ace_sidebar_hover({\r\n\t\t\t'sub_hover_delay': 750,\r\n\t\t\t'sub_scroll_style': 'no-track scroll-thin scroll-margin scroll-visible'\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\t//Load content via ajax\r\n\tfunction enableDemoAjax() {\t\t\r\n\t\tif(!$.fn.ace_ajax) return;\r\n \r\n\t\tif(window.Pace) {\r\n\t\t\twindow.paceOptions = {\r\n\t\t\t\tajax: true,\r\n\t\t\t\tdocument: true,\r\n\t\t\t\teventLag: false // disabled\r\n\t\t\t\t//elements: {selectors: ['.page-content-area']}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar demo_ajax_options = {\r\n\t\t\t 'close_active': true,\r\n\t\t\t \r\n\t\t\t 'default_url': 'page/index',//default hash\r\n\t\t\t 'content_url': function(hash) {\r\n\t\t\t\t//***NOTE***\r\n\t\t\t\t//this is for Ace demo only, you should change it to return a valid URL\r\n\t\t\t\t//please refer to documentation for more info\r\n\r\n\t\t\t\tif( !hash.match(/^page\\//) ) return false;\r\n\t\t\t\tvar path = document.location.pathname;\r\n\r\n\t\t\t\t//for example in Ace HTML demo version we convert /ajax/index.html#page/gallery to > /ajax/content/gallery.html and load it\r\n\t\t\t\tif(path.match(/(\\/ajax\\/)(index\\.html)?/))\r\n\t\t\t\t\treturn path.replace(/(\\/ajax\\/)(index\\.html)?/, '/ajax/content/'+hash.replace(/^page\\//, '')+'.html') ;\r\n\r\n\t\t\t\t//for example in Ace PHP demo version we convert \"ajax.php#page/dashboard\" to \"ajax.php?page=dashboard\" and load it\r\n\t\t\t\treturn path + \"?\" + hash.replace(/\\//, \"=\");\r\n\t\t\t  }\t\t\t  \r\n\t\t}\r\n\t\t   \r\n\t\t//for IE9 and below we exclude PACE loader (using conditional IE comments)\r\n\t\t//for other browsers we use the following extra ajax loader options\r\n\t\tif(window.Pace) {\r\n\t\t\tdemo_ajax_options['loading_overlay'] = 'body';//the opaque overlay is applied to 'body'\r\n\t\t}\r\n\r\n\t\t//initiate ajax loading on this element( which is .page-content-area[data-ajax-content=true] in Ace's demo)\r\n\t\t$('[data-ajax-content=true]').ace_ajax(demo_ajax_options)\r\n\r\n\t\t//if general error happens and ajax is working, let's stop loading icon & PACE\r\n\t\t$(window).on('error.ace_ajax', function() {\r\n\t\t\t$('[data-ajax-content=true]').each(function() {\r\n\t\t\t\tvar $this = $(this);\r\n\t\t\t\tif( $this.ace_ajax('working') ) {\r\n\t\t\t\t\tif(window.Pace && Pace.running) Pace.stop();\r\n\t\t\t\t\t$this.ace_ajax('stopLoading', true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/////////////////////////////\r\n\r\n\tfunction handleScrollbars() {\r\n\t\t//add scrollbars for navbar dropdowns\r\n\t\tvar has_scroll = !!$.fn.ace_scroll;\r\n\t\tif(has_scroll) $('.dropdown-content').ace_scroll({reset: false, mouseWheelLock: true})\r\n\r\n\t\t//reset scrolls bars on window resize\r\n\t\tif(has_scroll && !ace.vars['old_ie']) {//IE has an issue with widget fullscreen on ajax?!!!\r\n\t\t\t$(window).on('resize.reset_scroll', function() {\r\n\t\t\t\t$('.ace-scroll:not(.scroll-disabled)').not(':hidden').ace_scroll('reset');\r\n\t\t\t});\r\n\t\t\tif(has_scroll) $(document).on('settings.ace.reset_scroll', function(e, name) {\r\n\t\t\t\tif(name == 'sidebar_collapsed') $('.ace-scroll:not(.scroll-disabled)').not(':hidden').ace_scroll('reset');\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction dropdownAutoPos() {\r\n\t\t//change a dropdown to \"dropup\" depending on its position\r\n\t\t$(document).on('click.dropdown.pos', '.dropdown-toggle[data-position=\"auto\"]', function() {\r\n\t\t\tvar offset = $(this).offset();\r\n\t\t\tvar parent = $(this.parentNode);\r\n\r\n\t\t\tif ( parseInt(offset.top + $(this).height()) + 50 \r\n\t\t\t\t\t>\r\n\t\t\t\t(ace.helper.scrollTop() + ace.helper.winHeight() - parent.find('.dropdown-menu').eq(0).height()) \r\n\t\t\t\t) parent.addClass('dropup');\r\n\t\t\telse parent.removeClass('dropup');\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\tfunction navbarHelpers() {\r\n\t\t//prevent dropdowns from hiding when a from is clicked\r\n\t\t/**$(document).on('click', '.dropdown-navbar form', function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t});*/\r\n\r\n\r\n\t\t//disable navbar icon animation upon click\r\n\t\t$('.ace-nav [class*=\"icon-animated-\"]').closest('a').one('click', function(){\r\n\t\t\tvar icon = $(this).find('[class*=\"icon-animated-\"]').eq(0);\r\n\t\t\tvar $match = icon.attr('class').match(/icon\\-animated\\-([\\d\\w]+)/);\r\n\t\t\ticon.removeClass($match[0]);\r\n\t\t});\r\n\r\n\r\n\t\t//prevent dropdowns from hiding when a tab is selected\r\n\t\t$(document).on('click', '.dropdown-navbar .nav-tabs', function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\tvar $this , href\r\n\t\t\tvar that = e.target\r\n\t\t\tif( ($this = $(e.target).closest('[data-toggle=tab]')) && $this.length > 0) {\r\n\t\t\t\t$this.tab('show');\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\t$(window).triggerHandler('resize.navbar.dropdown')\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\tfunction sidebarTooltips() {\r\n\t\t//tooltip in sidebar items\r\n\t\t$('.sidebar .nav-list .badge[title],.sidebar .nav-list .badge[title]').each(function() {\r\n\t\t\tvar tooltip_class = $(this).attr('class').match(/tooltip\\-(?:\\w+)/);\r\n\t\t\ttooltip_class = tooltip_class ? tooltip_class[0] : 'tooltip-error';\r\n\t\t\t$(this).tooltip({\r\n\t\t\t\t'placement': function (context, source) {\r\n\t\t\t\t\tvar offset = $(source).offset();\r\n\r\n\t\t\t\t\tif( parseInt(offset.left) < parseInt(document.body.scrollWidth / 2) ) return 'right';\r\n\t\t\t\t\treturn 'left';\r\n\t\t\t\t},\r\n\t\t\t\tcontainer: 'body',\r\n\t\t\t\ttemplate: '<div class=\"tooltip '+tooltip_class+'\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>'\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\t//or something like this if items are dynamically inserted\r\n\t\t/**\r\n\t\t$('.sidebar').tooltip({\r\n\t\t\t'placement': function (context, source) {\r\n\t\t\t\tvar offset = $(source).offset();\r\n\r\n\t\t\t\tif( parseInt(offset.left) < parseInt(document.body.scrollWidth / 2) ) return 'right';\r\n\t\t\t\treturn 'left';\r\n\t\t\t},\r\n\t\t\tselector: '.nav-list .badge[title],.nav-list .label[title]',\r\n\t\t\tcontainer: 'body',\r\n\t\t\ttemplate: '<div class=\"tooltip tooltip-error\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>'\r\n\t\t});\r\n\t\t*/\r\n\t}\r\n\t\r\n\t\r\n\r\n\tfunction scrollTopBtn() {\r\n\t\t//the scroll to top button\r\n\t\tvar scroll_btn = $('.btn-scroll-up');\r\n\t\tif(scroll_btn.length > 0) {\r\n\t\t\tvar is_visible = false;\r\n\t\t\t$(window).on('scroll.scroll_btn', function() {\r\n\t\t\t\tvar scroll = ace.helper.scrollTop();\r\n\t\t\t\tvar h = ace.helper.winHeight();\r\n\t\t\t\tvar body_sH = document.body.scrollHeight;\r\n\t\t\t\tif(scroll > parseInt(h / 4) || (scroll > 0 && body_sH >= h && h + scroll >= body_sH - 1)) {//|| for smaller pages, when reached end of page\r\n\t\t\t\t\tif(!is_visible) {\r\n\t\t\t\t\t\tscroll_btn.addClass('display');\r\n\t\t\t\t\t\tis_visible = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(is_visible) {\r\n\t\t\t\t\t\tscroll_btn.removeClass('display');\r\n\t\t\t\t\t\tis_visible = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).triggerHandler('scroll.scroll_btn');\r\n\r\n\t\t\tscroll_btn.on(ace.click_event, function(){\r\n\t\t\t\tvar duration = Math.min(500, Math.max(100, parseInt(ace.helper.scrollTop() / 3)));\r\n\t\t\t\t$('html,body').animate({scrollTop: 0}, duration);\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\r\n\tfunction someBrowserFix() {\r\n\t\t//chrome and webkit have a problem here when resizing from 479px to more\r\n\t\t//we should force them redraw the navbar!\r\n\t\tif( ace.vars['webkit'] ) {\r\n\t\t\tvar ace_nav = $('.ace-nav').get(0);\r\n\t\t\tif( ace_nav ) $(window).on('resize.webkit_fix' , function(){\r\n\t\t\t\tace.helper.redraw(ace_nav);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//fix an issue with ios safari, when an element is fixed and an input receives focus\r\n\t\tif(ace.vars['ios_safari']) {\r\n\t\t  $(document).on('ace.settings.ios_fix', function(e, event_name, event_val) {\r\n\t\t\tif(event_name != 'navbar_fixed') return;\r\n\r\n\t\t\t$(document).off('focus.ios_fix blur.ios_fix', 'input,textarea,.wysiwyg-editor');\r\n\t\t\tif(event_val == true) {\r\n\t\t\t  $(document).on('focus.ios_fix', 'input,textarea,.wysiwyg-editor', function() {\r\n\t\t\t\t$(window).on('scroll.ios_fix', function() {\r\n\t\t\t\t\tvar navbar = $('#navbar').get(0);\r\n\t\t\t\t\tif(navbar) ace.helper.redraw(navbar);\r\n\t\t\t\t});\r\n\t\t\t  }).on('blur.ios_fix', 'input,textarea,.wysiwyg-editor', function() {\r\n\t\t\t\t$(window).off('scroll.ios_fix');\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t  }).triggerHandler('ace.settings.ios_fix', ['navbar_fixed', $('#navbar').css('position') == 'fixed']);\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t\r\n\tfunction bsCollapseToggle() {\r\n\t\t//bootstrap collapse component icon toggle\r\n\t\t$(document).on('hide.bs.collapse show.bs.collapse', function (ev) {\r\n\t\t\tvar panel_id = ev.target.getAttribute('id')\r\n\t\t\tvar panel = $('a[href*=\"#'+ panel_id+'\"]');\r\n\t\t\tif(panel.length == 0) panel = $('a[data-target*=\"#'+ panel_id+'\"]');\r\n\t\t\tif(panel.length == 0) return;\r\n\r\n\t\t\tpanel.find(ace.vars['.icon']).each(function(){\r\n\t\t\t\tvar $icon = $(this)\r\n\r\n\t\t\t\tvar $match\r\n\t\t\t\tvar $icon_down = null\r\n\t\t\t\tvar $icon_up = null\r\n\t\t\t\tif( ($icon_down = $icon.attr('data-icon-show')) ) {\r\n\t\t\t\t\t$icon_up = $icon.attr('data-icon-hide')\r\n\t\t\t\t}\r\n\t\t\t\telse if( $match = $icon.attr('class').match(/fa\\-(.*)\\-(up|down)/) ) {\r\n\t\t\t\t\t$icon_down = 'fa-'+$match[1]+'-down'\r\n\t\t\t\t\t$icon_up = 'fa-'+$match[1]+'-up'\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif($icon_down) {\r\n\t\t\t\t\tif(ev.type == 'show') $icon.removeClass($icon_down).addClass($icon_up)\r\n\t\t\t\t\t\telse $icon.removeClass($icon_up).addClass($icon_down)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\treturn false;//ignore other icons that match, one is enough\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\t\r\n\t//in small devices display navbar dropdowns like modal boxes\r\n\tfunction smallDeviceDropdowns() {\r\n\t  if(ace.vars['old_ie']) return;\r\n\t  \r\n\t  $(document)\r\n\t  .on('shown.bs.dropdown.navbar', '.ace-nav > li.dropdown-modal', function(e) {\r\n\t\tadjustNavbarDropdown.call(this);\r\n\t\tvar self = this;\r\n\t\t$(window).on('resize.navbar.dropdown', function() {\r\n\t\t\tadjustNavbarDropdown.call(self);\r\n\t\t})\r\n\t  })\r\n\t  .on('hidden.bs.dropdown.navbar', '.ace-nav > li.dropdown-modal', function(e) {\r\n\t\t$(window).off('resize.navbar.dropdown');\r\n\t\tresetNavbarDropdown.call(this);\r\n\t  })\r\n\t \r\n\t  function adjustNavbarDropdown() {\r\n\t\tvar $sub = $(this).find('> .dropdown-menu');\r\n\r\n\t\tif( $sub.css('position') == 'fixed' ) {\r\n\t\t\tvar win_width = parseInt($(window).width());\r\n\t\t\tvar offset_w = win_width > 320 ? 60 : (win_width > 240 ? 40 : 30);\r\n\t\t\tvar avail_width = parseInt(win_width) - offset_w;\r\n\t\t\tvar avail_height = parseInt($(window).height()) - 30;\r\n\t\t\t\r\n\t\t\tvar width = parseInt(Math.min(avail_width , 320));\r\n\t\t\t//we set 'width' here for text wrappings and spacings to take effect before calculating scrollHeight\r\n\t\t\t$sub.css('width', width);\r\n\r\n\t\t\tvar tabbed = false;\r\n\t\t\tvar extra_parts = 0;\r\n\t\t\tvar dropdown_content = $sub.find('.tab-pane.active .dropdown-content.ace-scroll');\r\n\t\t\tif(dropdown_content.length == 0) dropdown_content = $sub.find('.dropdown-content.ace-scroll');\r\n\t\t\telse tabbed = true;\r\n\r\n\t\t\tvar parent_menu = dropdown_content.closest('.dropdown-menu');\r\n\t\t\tvar scrollHeight = $sub[0].scrollHeight;\r\n\t\t\tif(dropdown_content.length == 1) {\r\n\t\t\t\t//sometimes there's no scroll-content, for example in detached scrollbars\r\n\t\t\t\tvar content =  dropdown_content.find('.scroll-content')[0];\r\n\t\t\t\tif(content) {\r\n\t\t\t\t\tscrollHeight = content.scrollHeight;\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\textra_parts += parent_menu.find('.dropdown-header').outerHeight();\r\n\t\t\t\textra_parts += parent_menu.find('.dropdown-footer').outerHeight();\r\n\t\t\t\t\r\n\t\t\t\tvar tab_content = parent_menu.closest('.tab-content');\r\n\t\t\t\tif( tab_content.length != 0 ) {\r\n\t\t\t\t\textra_parts += tab_content.siblings('.nav-tabs').eq(0).height();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\t\r\n\t\t\tvar height = parseInt(Math.min(avail_height , 480, scrollHeight + extra_parts));\r\n\t\t\tvar left = parseInt(Math.abs((avail_width + offset_w - width)/2));\r\n\t\t\tvar top = parseInt(Math.abs((avail_height + 30 - height)/2));\r\n\r\n\t\t\t\r\n\t\t\tvar zindex = parseInt($sub.css('z-index')) || 0;\r\n\r\n\t\t\t$sub.css({'height': height, 'left': left, 'right': 'auto', 'top': top - (!tabbed ? 1 : 3)});\r\n\t\t\tif(dropdown_content.length == 1) {\r\n\t\t\t\tif(!ace.vars['touch']) {\r\n\t\t\t\t\tdropdown_content.ace_scroll('update', {size: height - extra_parts}).ace_scroll('enable').ace_scroll('reset');\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdropdown_content\r\n\t\t\t\t\t.ace_scroll('disable').css('max-height', height - extra_parts).addClass('overflow-scroll');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$sub.css('height', height + (!tabbed ? 2 : 7));//for bottom border adjustment and tab content paddings\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif($sub.hasClass('user-menu')) {\r\n\t\t\t\t$sub.css('height', '');//because of user-info hiding/showing at different widths, which changes above 'scrollHeight', so we remove it!\r\n\t\t\t\t\r\n\t\t\t\t//user menu is re-positioned in small widths\r\n\t\t\t\t//but we need to re-position again in small heights as well (modal mode)\r\n\t\t\t\tvar user_info = $(this).find('.user-info');\r\n\t\t\t\tif(user_info.length == 1 && user_info.css('position') == 'fixed') {\r\n\t\t\t\t\tuser_info.css({'left': left, 'right': 'auto', 'top': top, 'width': width - 2, 'max-width': width - 2, 'z-index': zindex + 1});\r\n\t\t\t\t}\r\n\t\t\t\telse user_info.css({'left': '', 'right': '', 'top': '', 'width': '', 'max-width': '', 'z-index': ''});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//dropdown's z-index is limited by parent .navbar's z-index (which doesn't make sense because dropdowns are fixed!)\r\n\t\t\t//so for example when in 'content-slider' page, fixed modal toggle buttons go above are dropdowns\r\n\t\t\t//so we increase navbar's z-index to fix this!\r\n\t\t\t$(this).closest('.navbar.navbar-fixed-top').css('z-index', zindex);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif($sub.length != 0) resetNavbarDropdown.call(this, $sub);\r\n\t\t}\r\n\t  }\r\n\r\n\t  //reset scrollbars and user menu\r\n\t  function resetNavbarDropdown($sub) {\r\n\t\t$sub = $sub || $(this).find('> .dropdown-menu');\r\n\t  \r\n\t    if($sub.length > 0) {\r\n\t\t\t$sub\r\n\t\t\t.css({'width': '', 'height': '', 'left': '', 'right': '', 'top': ''})\r\n\t\t\t.find('.dropdown-content').each(function() {\r\n\t\t\t\tif(ace.vars['touch']) {\r\n\t\t\t\t\t$(this).css('max-height', '').removeClass('overflow-scroll');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar size = parseInt($(this).attr('data-size') || 0) || $.fn.ace_scroll.defaults.size;\r\n\t\t\t\t$(this).ace_scroll('update', {size: size}).ace_scroll('enable').ace_scroll('reset');\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tif( $sub.hasClass('user-menu') ) {\r\n\t\t\t\tvar user_info = \r\n\t\t\t\t$(this).find('.user-info')\r\n\t\t\t\t.css({'left': '', 'right': '', 'top': '', 'width': '', 'max-width': '', 'z-index': ''});\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t$(this).closest('.navbar').css('z-index', '');\r\n\t  }\r\n\t}\r\n\r\n});//jQuery document ready\r\n\r\n\r\n\r\n\r\n\r\n//some ace helper functions\r\n(function($$ , undefined) {//$$ is ace.helper\r\n $$.unCamelCase = function(str) {\r\n\treturn str.replace(/([a-z])([A-Z])/g, function(match, c1, c2){ return c1+'-'+c2.toLowerCase() })\r\n }\r\n $$.strToVal = function(str) {\r\n\tvar res = str.match(/^(?:(true)|(false)|(null)|(\\-?[\\d]+(?:\\.[\\d]+)?)|(\\[.*\\]|\\{.*\\}))$/i);\r\n\r\n\tvar val = str;\r\n\tif(res) {\r\n\t\tif(res[1]) val = true;\r\n\t\telse if(res[2]) val = false;\r\n\t\telse if(res[3]) val = null;\t\r\n\t\telse if(res[4]) val = parseFloat(str);\r\n\t\telse if(res[5]) {\r\n\t\t\ttry { val = JSON.parse(str) }\r\n\t\t\tcatch (err) {}\r\n\t\t}\r\n\t}\r\n\r\n\treturn val;\r\n }\r\n $$.getAttrSettings = function(elem, attr_list, prefix) {\r\n\tif(!elem) return;\r\n\tvar list_type = attr_list instanceof Array ? 1 : 2;\r\n\t//attr_list can be Array or Object(key/value)\r\n\tvar prefix = prefix ? prefix.replace(/([^\\-])$/ , '$1-') : '';\r\n\tprefix = 'data-' + prefix;\r\n\r\n\tvar settings = {}\r\n\tfor(var li in attr_list) if(attr_list.hasOwnProperty(li)) {\r\n\t\tvar name = list_type == 1 ? attr_list[li] : li;\r\n\t\tvar attr_val, attr_name = $$.unCamelCase(name.replace(/[^A-Za-z0-9]{1,}/g , '-')).toLowerCase()\r\n\r\n\t\tif( ! ((attr_val = elem.getAttribute(prefix + attr_name))  ) ) continue;\r\n\t\tsettings[name] = $$.strToVal(attr_val);\r\n\t}\r\n\r\n\treturn settings;\r\n }\r\n\r\n $$.scrollTop = function() {\r\n\treturn document.scrollTop || document.documentElement.scrollTop || document.body.scrollTop\r\n }\r\n $$.winHeight = function() {\r\n\treturn window.innerHeight || document.documentElement.clientHeight;\r\n }\r\n $$.redraw = function(elem, force) {\r\n\tif(!elem) return;\r\n\tvar saved_val = elem.style['display'];\r\n\telem.style.display = 'none';\r\n\telem.offsetHeight;\r\n\tif(force !== true) {\r\n\t\telem.style.display = saved_val;\r\n\t}\r\n\telse {\r\n\t\t//force redraw for example in old IE\r\n\t\tsetTimeout(function() {\r\n\t\t\telem.style.display = saved_val;\r\n\t\t}, 10);\r\n\t}\r\n }\r\n})(ace.helper);","/**\r\n <b>Sidebar functions</b>. Collapsing/expanding, toggling mobile view menu and other sidebar functions.\r\n*/\r\n\r\n(function($ , undefined) {\r\n\tvar sidebar_count = 0;\r\n\r\n\tfunction Sidebar(sidebar, settings) {\r\n\t\tvar self = this;\r\n\t\tthis.$sidebar = $(sidebar);\r\n\t\tthis.$sidebar.attr('data-sidebar', 'true');\r\n\t\tif( !this.$sidebar.attr('id') ) this.$sidebar.attr( 'id' , 'id-sidebar-'+(++sidebar_count) )\r\n\r\n\t\t\r\n\t\t//get a list of 'data-*' attributes that override 'defaults' and 'settings'\r\n\t\tvar attrib_values = ace.helper.getAttrSettings(sidebar, $.fn.ace_sidebar.defaults, 'sidebar-');\r\n\t\tthis.settings = $.extend({}, $.fn.ace_sidebar.defaults, settings, attrib_values);\r\n\r\n\r\n\t\t//some vars\r\n\t\tthis.minimized = false;//will be initiated later\r\n\t\tthis.collapsible = false;//...\r\n\t\tthis.horizontal = false;//...\r\n\t\tthis.mobile_view = false;//\r\n\r\n\r\n\t\tthis.vars = function() {\r\n\t\t\treturn {'minimized': this.minimized, 'collapsible': this.collapsible, 'horizontal': this.horizontal, 'mobile_view': this.mobile_view}\r\n\t\t}\r\n\t\tthis.get = function(name) {\r\n\t\t\tif(this.hasOwnProperty(name)) return this[name];\r\n\t\t}\r\n\t\tthis.set = function(name, value) {\r\n\t\t\tif(this.hasOwnProperty(name)) this[name] = value;\r\n\t\t}\r\n\t\t\r\n\r\n\t\tthis.ref = function() {\r\n\t\t\t//return a reference to self\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvar toggleIcon = function(minimized) {\r\n\t\t\tvar icon = $(this).find(ace.vars['.icon']), icon1, icon2;\r\n\t\t\tif(icon.length > 0) {\r\n\t\t\t\ticon1 = icon.attr('data-icon1');//the icon for expanded state\r\n\t\t\t\ticon2 = icon.attr('data-icon2');//the icon for collapsed state\r\n\r\n\t\t\t\tif(minimized !== undefined) {\r\n\t\t\t\t\tif(minimized) icon.removeClass(icon1).addClass(icon2);\r\n\t\t\t\t\telse icon.removeClass(icon2).addClass(icon1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ticon.toggleClass(icon1).toggleClass(icon2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\r\n\t\tvar findToggleBtn = function() {\r\n\t\t\tvar toggle_btn = self.$sidebar.find('.sidebar-collapse');\r\n\t\t\tif(toggle_btn.length == 0) toggle_btn = $('.sidebar-collapse[data-target=\"#'+(self.$sidebar.attr('id')||'')+'\"]');\r\n\t\t\tif(toggle_btn.length != 0) toggle_btn = toggle_btn[0];\r\n\t\t\telse toggle_btn = null;\r\n\t\t\t\r\n\t\t\treturn toggle_btn;\r\n\t\t}\r\n\t\t\r\n\t\t//collapse/expand button\r\n\t\tthis.toggleMenu = function(toggle_btn, save) {\r\n\t\t\tif(this.collapsible) return;\r\n\r\n\t\t\t//var minimized = this.$sidebar.hasClass('menu-min');\r\n\t\t\tthis.minimized = !this.minimized;\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\t//toggle_btn can also be a param to indicate saving to cookie or not?! if toggle_btn === false, it won't be saved\r\n\t\t\t\tace.settings.sidebar_collapsed(sidebar, this.minimized, !(toggle_btn === false || save === false));//@ ace-extra.js\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif(this.minimized)\r\n\t\t\t\t\tthis.$sidebar.addClass('menu-min');\r\n\t\t\t\telse this.$sidebar.removeClass('menu-min');\r\n\t\t\t}\r\n\t\r\n\t\t\tif( !toggle_btn ) {\r\n\t\t\t\ttoggle_btn = findToggleBtn();\r\n\t\t\t}\r\n\t\t\tif(toggle_btn) {\r\n\t\t\t\ttoggleIcon.call(toggle_btn, this.minimized);\r\n\t\t\t}\r\n\r\n\t\t\t//force redraw for ie8\r\n\t\t\tif(ace.vars['old_ie']) ace.helper.redraw(sidebar);\r\n\t\t}\r\n\t\tthis.collapse = function(toggle_btn, save) {\r\n\t\t\tif(this.collapsible) return;\r\n\t\t\tthis.minimized = false;\r\n\t\t\t\r\n\t\t\tthis.toggleMenu(toggle_btn, save);\r\n\t\t}\r\n\t\tthis.expand = function(toggle_btn, save) {\r\n\t\t\tif(this.collapsible) return;\r\n\t\t\tthis.minimized = true;\r\n\t\t\t\r\n\t\t\tthis.toggleMenu(toggle_btn, save);\r\n\t\t}\r\n\t\t\r\n\r\n\t\t\r\n\t\t//collapse/expand in 2nd mobile style\r\n\t\tthis.toggleResponsive = function(toggle_btn) {\r\n\t\t\tif(!this.mobile_view || this.mobile_style != 3) return;\r\n\t\t\r\n\t\t\tif( this.$sidebar.hasClass('menu-min') ) {\r\n\t\t\t\t//remove menu-min because it interferes with responsive-max\r\n\t\t\t\tthis.$sidebar.removeClass('menu-min');\r\n\t\t\t\tvar btn = findToggleBtn();\r\n\t\t\t\tif(btn) toggleIcon.call(btn);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis.minimized = !this.$sidebar.hasClass('responsive-min');\r\n\t\t\tthis.$sidebar.toggleClass('responsive-min responsive-max');\r\n\r\n\r\n\t\t\tif( !toggle_btn ) {\r\n\t\t\t\ttoggle_btn = this.$sidebar.find('.sidebar-expand');\r\n\t\t\t\tif(toggle_btn.length == 0) toggle_btn = $('.sidebar-expand[data-target=\"#'+(this.$sidebar.attr('id')||'')+'\"]');\r\n\t\t\t\tif(toggle_btn.length != 0) toggle_btn = toggle_btn[0];\r\n\t\t\t\telse toggle_btn = null;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(toggle_btn) {\r\n\t\t\t\tvar icon = $(toggle_btn).find(ace.vars['.icon']), icon1, icon2;\r\n\t\t\t\tif(icon.length > 0) {\r\n\t\t\t\t\ticon1 = icon.attr('data-icon1');//the icon for expanded state\r\n\t\t\t\t\ticon2 = icon.attr('data-icon2');//the icon for collapsed state\r\n\r\n\t\t\t\t\ticon.toggleClass(icon1).toggleClass(icon2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$(document).triggerHandler('settings.ace', ['sidebar_collapsed' , this.minimized]);\r\n\t\t}\r\n\t\t\r\n\t\t//some helper functions\r\n\t\tthis.is_collapsible = function() {\r\n\t\t\tvar toggle\r\n\t\t\treturn (this.$sidebar.hasClass('navbar-collapse'))\r\n\t\t\t&& ((toggle = $('.navbar-toggle[data-target=\"#'+(this.$sidebar.attr('id')||'')+'\"]').get(0)) != null)\r\n\t\t\t&&  toggle.scrollHeight > 0\r\n\t\t\t//sidebar is collapsible and collapse button is visible?\r\n\t\t}\r\n\t\tthis.is_mobile_view = function() {\r\n\t\t\tvar toggle\r\n\t\t\treturn ((toggle = $('.menu-toggler[data-target=\"#'+(this.$sidebar.attr('id')||'')+'\"]').get(0)) != null)\r\n\t\t\t&&  toggle.scrollHeight > 0\r\n\t\t}\r\n\r\n\r\n\t\t//toggling submenu\r\n\t\tthis.$sidebar.on(ace.click_event+'.ace.submenu', '.nav-list', function (ev) {\r\n\t\t\tvar nav_list = this;\r\n\r\n\t\t\t//check to see if we have clicked on an element which is inside a .dropdown-toggle element?!\r\n\t\t\t//if so, it means we should toggle a submenu\r\n\t\t\tvar link_element = $(ev.target).closest('a');\r\n\t\t\tif(!link_element || link_element.length == 0) return;//return if not clicked inside a link element\r\n\r\n\t\t\tvar minimized  = self.minimized && !self.collapsible;\r\n\t\t\t//if .sidebar is .navbar-collapse and in small device mode, then let minimized be uneffective\r\n\t\r\n\t\t\tif( !link_element.hasClass('dropdown-toggle') ) {//it doesn't have a submenu return\r\n\t\t\t\t//just one thing before we return\r\n\t\t\t\t//if sidebar is collapsed(minimized) and we click on a first level menu item\r\n\t\t\t\t//and the click is on the icon, not on the menu text then let's cancel event and cancel navigation\r\n\t\t\t\t//Good for touch devices, that when the icon is tapped to see the menu text, navigation is cancelled\r\n\t\t\t\t//navigation is only done when menu text is tapped\r\n\r\n\t\t\t\tif( ace.click_event == 'tap'\r\n\t\t\t\t\t&&\r\n\t\t\t\t\tminimized\r\n\t\t\t\t\t&&\r\n\t\t\t\t\tlink_element.get(0).parentNode.parentNode == nav_list )//only level-1 links\r\n\t\t\t\t{\r\n\t\t\t\t\tvar text = link_element.find('.menu-text').get(0);\r\n\t\t\t\t\tif( text != null && ev.target != text && !$.contains(text , ev.target) ) {//not clicking on the text or its children\r\n\t\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t//ios safari only has a bit of a problem not navigating to link address when scrolling down\r\n\t\t\t\t//specify data-link attribute to ignore this\r\n\t\t\t\tif(ace.vars['ios_safari'] && link_element.attr('data-link') !== 'false') {\r\n\t\t\t\t\t//only ios safari has a bit of a problem not navigating to link address when scrolling down\r\n\t\t\t\t\t//please see issues section in documentation\r\n\t\t\t\t\tdocument.location = link_element.attr('href');\r\n\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tev.preventDefault();\r\n\t\t\t\r\n\t\t\t\r\n\r\n\r\n\t\t\tvar sub = link_element.siblings('.submenu').get(0);\r\n\t\t\tif(!sub) return false;\r\n\t\t\tvar $sub = $(sub);\r\n\r\n\t\t\tvar height_change = 0;//the amount of height change in .nav-list\r\n\r\n\t\t\tvar parent_ul = sub.parentNode.parentNode;\r\n\t\t\tif\r\n\t\t\t(\r\n\t\t\t\t( minimized && parent_ul == nav_list )\r\n\t\t\t\t || \r\n\t\t\t\t( ( $sub.parent().hasClass('hover') && $sub.css('position') == 'absolute' ) && !self.collapsible )\r\n\t\t\t)\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\tvar sub_hidden = (sub.scrollHeight == 0)\r\n\r\n\t\t\t//if not open and visible, let's open it and make it visible\r\n\t\t\tif( sub_hidden ) {//being shown now\r\n\t\t\t  $(parent_ul).find('> .open > .submenu').each(function() {\r\n\t\t\t\t//close all other open submenus except for the active one\r\n\t\t\t\tif(this != sub && !$(this.parentNode).hasClass('active')) {\r\n\t\t\t\t\theight_change -= this.scrollHeight;\r\n\t\t\t\t\tself.hide(this, self.settings.duration, false);\r\n\t\t\t\t}\r\n\t\t\t  })\r\n\t\t\t}\r\n\r\n\t\t\tif( sub_hidden ) {//being shown now\r\n\t\t\t\tself.show(sub, self.settings.duration);\r\n\t\t\t\t//if a submenu is being shown and another one previously started to hide, then we may need to update/hide scrollbars\r\n\t\t\t\t//but if no previous submenu is being hidden, then no need to check if we need to hide the scrollbars in advance\r\n\t\t\t\tif(height_change != 0) height_change += sub.scrollHeight;//we need new updated 'scrollHeight' here\r\n\t\t\t} else {\r\n\t\t\t\tself.hide(sub, self.settings.duration);\r\n\t\t\t\theight_change -= sub.scrollHeight;\r\n\t\t\t\t//== -1 means submenu is being hidden\r\n\t\t\t}\r\n\r\n\t\t\t//hide scrollbars if content is going to be small enough that scrollbars is not needed anymore\r\n\t\t\t//do this almost before submenu hiding begins\r\n\t\t\t//but when minimized submenu's toggle should have no effect\r\n\t\t\tif (height_change != 0) {\r\n\t\t\t\tif(self.$sidebar.attr('data-sidebar-scroll') == 'true' && !self.minimized) \r\n\t\t\t\t\tself.$sidebar.ace_sidebar_scroll('prehide', height_change)\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t})\r\n\r\n\t\tvar submenu_working = false;\r\n\t\tthis.show = function(sub, $duration, shouldWait) {\r\n\t\t\t//'shouldWait' indicates whether to wait for previous transition (submenu toggle) to be complete or not?\r\n\t\t\tshouldWait = (shouldWait !== false);\r\n\t\t\tif(shouldWait && submenu_working) return false;\r\n\t\t\t\t\t\r\n\t\t\tvar $sub = $(sub);\r\n\t\t\tvar event;\r\n\t\t\t$sub.trigger(event = $.Event('show.ace.submenu'))\r\n\t\t\tif (event.isDefaultPrevented()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(shouldWait) submenu_working = true;\r\n\r\n\r\n\t\t\t$duration = $duration || this.settings.duration;\r\n\t\t\t\r\n\t\t\t$sub.css({\r\n\t\t\t\theight: 0,\r\n\t\t\t\toverflow: 'hidden',\r\n\t\t\t\tdisplay: 'block'\r\n\t\t\t})\r\n\t\t\t.removeClass('nav-hide').addClass('nav-show')//only for window < @grid-float-breakpoint and .navbar-collapse.menu-min\r\n\t\t\t.parent().addClass('open');\r\n\t\t\t\r\n\t\t\tsub.scrollTop = 0;//this is for submenu_hover when sidebar is minimized and a submenu is scrollTop'ed using scrollbars ...\r\n\r\n\t\t\tif( $duration > 0 ) {\r\n\t\t\t  $sub.css({height: sub.scrollHeight,\r\n\t\t\t\t'transition-property': 'height',\r\n\t\t\t\t'transition-duration': ($duration/1000)+'s'})\r\n\t\t\t}\r\n\r\n\t\t\tvar complete = function(ev, trigger) {\r\n\t\t\t\tev && ev.stopPropagation();\r\n\t\t\t\t$sub\r\n\t\t\t\t.css({'transition-property': '', 'transition-duration': '', overflow:'', height: ''})\r\n\t\t\t\t//if(ace.vars['webkit']) ace.helper.redraw(sub);//little Chrome issue, force redraw ;)\r\n\r\n\t\t\t\tif(trigger !== false) $sub.trigger($.Event('shown.ace.submenu'))\r\n\t\t\t\t\r\n\t\t\t\tif(shouldWait) submenu_working = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( $duration > 0 && !!$.support.transition.end ) {\r\n\t\t\t  $sub.one($.support.transition.end, complete);\r\n\t\t\t}\r\n\t\t\telse complete();\r\n\t\t\t\r\n\t\t\t//there is sometimes a glitch, so maybe retry\r\n\t\t\tif(ace.vars['android']) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tcomplete(null, false);\r\n\t\t\t\t\tace.helper.redraw(sub);\r\n\t\t\t\t}, $duration + 20);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t }\r\n\t\t \r\n\t\t \r\n\t\t this.hide = function(sub, $duration, shouldWait) {\r\n\t\t\t//'shouldWait' indicates whether to wait for previous transition (submenu toggle) to be complete or not?\r\n\t\t\tshouldWait = (shouldWait !== false);\r\n\t\t\tif(shouldWait && submenu_working) return false;\r\n\t\t \r\n\t\t\t\r\n\t\t\tvar $sub = $(sub);\r\n\t\t\tvar event;\r\n\t\t\t$sub.trigger(event = $.Event('hide.ace.submenu'))\r\n\t\t\tif (event.isDefaultPrevented()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(shouldWait) submenu_working = true;\r\n\t\t\t\r\n\r\n\t\t\t$duration = $duration || this.settings.duration;\r\n\t\t\t\r\n\t\t\t$sub.css({\r\n\t\t\t\theight: sub.scrollHeight,\r\n\t\t\t\toverflow: 'hidden',\r\n\t\t\t\tdisplay: 'block'\r\n\t\t\t})\r\n\t\t\t.parent().removeClass('open');\r\n\r\n\t\t\tsub.offsetHeight;\r\n\t\t\t//forces the \"sub\" to re-consider the new 'height' before transition\r\n\r\n\t\t\tif( $duration > 0 ) {\r\n\t\t\t  $sub.css({'height': 0,\r\n\t\t\t\t'transition-property': 'height',\r\n\t\t\t\t'transition-duration': ($duration/1000)+'s'});\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar complete = function(ev, trigger) {\r\n\t\t\t\tev && ev.stopPropagation();\r\n\t\t\t\t$sub\r\n\t\t\t\t.css({display: 'none', overflow:'', height: '', 'transition-property': '', 'transition-duration': ''})\r\n\t\t\t\t.removeClass('nav-show').addClass('nav-hide')//only for window < @grid-float-breakpoint and .navbar-collapse.menu-min\r\n\r\n\t\t\t\tif(trigger !== false) $sub.trigger($.Event('hidden.ace.submenu'))\r\n\t\t\t\t\r\n\t\t\t\tif(shouldWait) submenu_working = false;\r\n\t\t\t}\r\n\r\n\t\t\tif( $duration > 0 && !!$.support.transition.end ) {\r\n\t\t\t   $sub.one($.support.transition.end, complete);\r\n\t\t\t}\r\n\t\t\telse complete();\r\n\r\n\r\n\t\t\t//there is sometimes a glitch, so maybe retry\r\n\t\t\tif(ace.vars['android']) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tcomplete(null, false);\r\n\t\t\t\t\tace.helper.redraw(sub);\r\n\t\t\t\t}, $duration + 20);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t }\r\n\r\n\t\t this.toggle = function(sub, $duration) {\r\n\t\t\t$duration = $duration || self.settings.duration;\r\n\t\t \r\n\t\t\tif( sub.scrollHeight == 0 ) {//if an element is hidden scrollHeight becomes 0\r\n\t\t\t\tif( this.show(sub, $duration) ) return 1;\r\n\t\t\t} else {\r\n\t\t\t\tif( this.hide(sub, $duration) ) return -1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t }\r\n\r\n\r\n\t\t//sidebar vars\r\n\t\tvar minimized_menu_class  = 'menu-min';\r\n\t\tvar responsive_min_class  = 'responsive-min';\r\n\t\tvar horizontal_menu_class = 'h-sidebar';\r\n\r\n\t\tvar sidebar_mobile_style = function() {\r\n\t\t\t//differnet mobile menu styles\r\n\t\t\tthis.mobile_style = 1;//default responsive mode with toggle button inside navbar\r\n\t\t\tif(this.$sidebar.hasClass('responsive') && !$('.menu-toggler[data-target=\"#'+this.$sidebar.attr('id')+'\"]').hasClass('navbar-toggle')) this.mobile_style = 2;//toggle button behind sidebar\r\n\t\t\t else if(this.$sidebar.hasClass(responsive_min_class)) this.mobile_style = 3;//minimized menu\r\n\t\t\t  else if(this.$sidebar.hasClass('navbar-collapse')) this.mobile_style = 4;//collapsible (bootstrap style)\r\n\t\t}\r\n\t\tsidebar_mobile_style.call(self);\r\n\t\t  \r\n\t\tfunction update_vars() {\r\n\t\t\tthis.mobile_view = this.mobile_style < 4 && this.is_mobile_view();\r\n\t\t\tthis.collapsible = !this.mobile_view && this.is_collapsible();\r\n\r\n\t\t\tthis.minimized = \r\n\t\t\t(!this.collapsible && this.$sidebar.hasClass(minimized_menu_class))\r\n\t\t\t ||\r\n\t\t\t(this.mobile_style == 3 && this.mobile_view && this.$sidebar.hasClass(responsive_min_class))\r\n\r\n\t\t\tthis.horizontal = !(this.mobile_view || this.collapsible) && this.$sidebar.hasClass(horizontal_menu_class)\r\n\t\t}\r\n\r\n\t\t//update some basic variables\r\n\t\t$(window).on('resize.sidebar.vars' , function(){\r\n\t\t\tupdate_vars.call(self);\r\n\t\t}).triggerHandler('resize.sidebar.vars')\r\n\r\n\t}//end of Sidebar\r\n\t\r\n\r\n\t//sidebar events\r\n\t\r\n\t//menu-toggler\r\n\t$(document)\r\n\t.on(ace.click_event+'.ace.menu', '.menu-toggler', function(e){\r\n\t\tvar btn = $(this);\r\n\t\tvar sidebar = $(btn.attr('data-target'));\r\n\t\tif(sidebar.length == 0) return;\r\n\t\t\r\n\t\te.preventDefault();\r\n\t\t\t\t\r\n\t\tsidebar.toggleClass('display');\r\n\t\tbtn.toggleClass('display');\r\n\t\t\r\n\t\tvar click_event = ace.click_event+'.ace.autohide';\r\n\t\tvar auto_hide = sidebar.attr('data-auto-hide') === 'true';\r\n\r\n\t\tif( btn.hasClass('display') ) {\r\n\t\t\t//hide menu if clicked outside of it!\r\n\t\t\tif(auto_hide) {\r\n\t\t\t\t$(document).on(click_event, function(ev) {\r\n\t\t\t\t\tif( sidebar.get(0) == ev.target || $.contains(sidebar.get(0), ev.target) ) {\r\n\t\t\t\t\t\tev.stopPropagation();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsidebar.removeClass('display');\r\n\t\t\t\t\tbtn.removeClass('display');\r\n\t\t\t\t\t$(document).off(click_event);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif(sidebar.attr('data-sidebar-scroll') == 'true') sidebar.ace_sidebar_scroll('reset');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(auto_hide) $(document).off(click_event);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t})\r\n\t//sidebar collapse/expand button\r\n\t.on(ace.click_event+'.ace.menu', '.sidebar-collapse', function(e){\r\n\t\t\r\n\t\tvar target = $(this).attr('data-target'), $sidebar = null;\r\n\t\tif(target) $sidebar = $(target);\r\n\t\tif($sidebar == null || $sidebar.length == 0) $sidebar = $(this).closest('.sidebar');\r\n\t\tif($sidebar.length == 0) return;\r\n\r\n\t\te.preventDefault();\r\n\t\t$sidebar.ace_sidebar('toggleMenu', this);\r\n\t})\r\n\t//this button is used in `mobile_style = 3` responsive menu style to expand minimized sidebar\r\n\t.on(ace.click_event+'.ace.menu', '.sidebar-expand', function(e){\r\n\t\tvar target = $(this).attr('data-target'), $sidebar = null;\r\n\t\tif(target) $sidebar = $(target);\r\n\t\tif($sidebar == null || $sidebar.length == 0) $sidebar = $(this).closest('.sidebar');\r\n\t\tif($sidebar.length == 0) return;\t\r\n\t\r\n\t\tvar btn = this;\r\n\t\te.preventDefault();\r\n\t\t$sidebar.ace_sidebar('toggleResponsive', this);\r\n\t\t\r\n\t\tvar click_event = ace.click_event+'.ace.autohide';\r\n\t\tif($sidebar.attr('data-auto-hide') === 'true') {\r\n\t\t\tif( $sidebar.hasClass('responsive-max') ) {\r\n\t\t\t\t$(document).on(click_event, function(ev) {\r\n\t\t\t\t\tif( $sidebar.get(0) == ev.target || $.contains($sidebar.get(0), ev.target) ) {\r\n\t\t\t\t\t\tev.stopPropagation();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$sidebar.ace_sidebar('toggleResponsive', btn);\r\n\t\t\t\t\t$(document).off(click_event);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$(document).off(click_event);\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t\r\n\t$.fn.ace_sidebar = function (option, value) {\r\n\t\tvar method_call;\r\n\r\n\t\tvar $set = this.each(function () {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tvar data = $this.data('ace_sidebar');\r\n\t\t\tvar options = typeof option === 'object' && option;\r\n\r\n\t\t\tif (!data) $this.data('ace_sidebar', (data = new Sidebar(this, options)));\r\n\t\t\tif (typeof option === 'string' && typeof data[option] === 'function') {\r\n\t\t\t\tif(value instanceof Array) method_call = data[option].apply(data, value);\r\n\t\t\t\telse method_call = data[option](value);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn (method_call === undefined) ? $set : method_call;\r\n\t};\r\n\t\r\n\t\r\n\t$.fn.ace_sidebar.defaults = {\r\n\t\t'duration': 300\r\n    }\r\n\r\n\r\n})(window.jQuery);\r\n","/**\r\n <b>Settings box</b>. It's good for demo only. You don't need this.\r\n*/\r\n(function($ , undefined) {\r\n\r\n $('#ace-settings-btn').on(ace.click_event, function(e){\r\n\te.preventDefault();\r\n\r\n\t$(this).toggleClass('open');\r\n\t$('#ace-settings-box').toggleClass('open');\r\n })\r\n\r\n $('#ace-settings-navbar').on('click', function(){\r\n\tace.settings.navbar_fixed(null, this.checked);//@ ace-extra.js\r\n\t//$(window).triggerHandler('resize.navbar');\r\n\r\n\t//force redraw?\r\n\t//if(ace.vars['webkit']) ace.helper.redraw(document.body);\r\n }).each(function(){this.checked = ace.settings.is('navbar', 'fixed')})\r\n\r\n $('#ace-settings-sidebar').on('click', function(){\r\n\tace.settings.sidebar_fixed(null, this.checked);//@ ace-extra.js\r\n\r\n\t//if(ace.vars['webkit']) ace.helper.redraw(document.body);\r\n }).each(function(){this.checked = ace.settings.is('sidebar', 'fixed')})\r\n\r\n $('#ace-settings-breadcrumbs').on('click', function(){\r\n\tace.settings.breadcrumbs_fixed(null, this.checked);//@ ace-extra.js\r\n\r\n\t//if(ace.vars['webkit']) ace.helper.redraw(document.body);\r\n }).each(function(){this.checked = ace.settings.is('breadcrumbs', 'fixed')})\r\n\r\n $('#ace-settings-add-container').on('click', function(){\r\n\tace.settings.main_container_fixed(null, this.checked);//@ ace-extra.js\r\n\r\n\t//if(ace.vars['webkit']) ace.helper.redraw(document.body);\r\n }).each(function(){this.checked = ace.settings.is('main-container', 'fixed')})\r\n\r\n\r\n\r\n $('#ace-settings-compact').on('click', function(){\r\n\tif(this.checked) {\r\n\t\t$('#sidebar').addClass('compact');\r\n\t\tvar hover = $('#ace-settings-hover');\r\n\t\tif( hover.length > 0 ) {\r\n\t\t\thover.removeAttr('checked').trigger('click');\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t$('#sidebar').removeClass('compact');\r\n\t\t$('#sidebar[data-sidebar-scroll=true]').ace_sidebar_scroll('reset')\r\n\t}\r\n\t\r\n\tif(ace.vars['old_ie']) ace.helper.redraw($('#sidebar')[0], true);\r\n })/*.removeAttr('checked')*/\r\n\r\n\r\n $('#ace-settings-highlight').on('click', function(){\r\n\tif(this.checked) $('#sidebar .nav-list > li').addClass('highlight');\r\n\telse $('#sidebar .nav-list > li').removeClass('highlight');\r\n\t\r\n\tif(ace.vars['old_ie']) ace.helper.redraw($('#sidebar')[0]);\r\n })/*.removeAttr('checked')*/\r\n\r\n\r\n $('#ace-settings-hover').on('click', function(){\r\n\tif($('#sidebar').hasClass('h-sidebar')) return;\r\n\tif(this.checked) {\r\n\t\t$('#sidebar li').addClass('hover')\r\n\t\t.filter('.open').removeClass('open').find('> .submenu').css('display', 'none');\r\n\t\t//and remove .open items\r\n\t}\r\n\telse {\r\n\t\t$('#sidebar li.hover').removeClass('hover');\r\n\r\n\t\tvar compact = $('#ace-settings-compact');\r\n\t\tif( compact.length > 0 && compact.get(0).checked ) {\r\n\t\t\tcompact.trigger('click');\r\n\t\t}\r\n\t}\r\n\t\r\n\t$('.sidebar[data-sidebar-hover=true]').ace_sidebar_hover('reset')\r\n\t$('.sidebar[data-sidebar-scroll=true]').ace_sidebar_scroll('reset')\r\n\t\r\n\tif(ace.vars['old_ie']) ace.helper.redraw($('#sidebar')[0]);\r\n })/*.removeAttr('checked')*/\r\n\r\n})(jQuery);","/**\r\n <b>Select a different skin</b>. It's good for demo only.\r\n You should hard code skin-specific changes inside your HTML/server-side code.\r\n Please refer to documentation for more info.\r\n*/\r\n\r\n(function($ , undefined) {\r\n  try {\r\n\t$('#skin-colorpicker').ace_colorpicker({'auto_pos': false});\r\n  } catch(e) {}\r\n\r\n  $('#skin-colorpicker').on('change', function(){\r\n\tvar skin_class = $(this).find('option:selected').data('skin');\r\n\r\n\tif($('#ace-skins-stylesheet').length == 0) {\r\n\t\t//let's load skins stylesheet only when needed!\r\n\t\tvar ace_style = $('head').find('link.ace-main-stylesheet');\r\n\t\tif(ace_style.length == 0) {\r\n\t\t\tace_style = $('head').find('link[href*=\"/ace.min.css\"],link[href*=\"/ace-part2.min.css\"]');\r\n\t\t\tif(ace_style.length == 0) {\r\n\t\t\t\tace_style = $('head').find('link[href*=\"/ace.css\"],link[href*=\"/ace-part2.css\"]');\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar stylesheet_url = ace_style.first().attr('href').replace(/(\\.min)?\\.css$/i , '-skins$1.css');\r\n\t\t$.ajax({\r\n\t\t\t'url': stylesheet_url\r\n\t\t}).done(function() {\r\n\t\t\tvar new_link = jQuery('<link />', {type : 'text/css', rel: 'stylesheet', 'id': 'ace-skins-stylesheet'})\r\n\t\t\tif(ace_style.length > 0){\r\n\t\t\t\tnew_link.insertAfter(ace_style.last());\r\n\t\t\t}\r\n\t\t\telse new_link.appendTo('head');\r\n\t\r\n\t\t\tnew_link.attr('href', stylesheet_url);\r\n\t\t\t//we set \"href\" after insertion, for IE to work\r\n\t\t\t\r\n\t\t\tapplyChanges(skin_class);\r\n\t\t\tif(window.Pace && Pace.running)\tPace.stop();\r\n\t\t})\r\n\t}\r\n\telse {\r\n\t\tapplyChanges(skin_class);\r\n\t}\r\n\r\n\r\n\tfunction applyChanges(skin_class) {\r\n\t\t//skin cookie tip\r\n\t\tvar body = $(document.body);\r\n\t\tbody.removeClass('no-skin skin-1 skin-2 skin-3');\r\n\t\t//if(skin_class != 'skin-0') {\r\n\t\t\tbody.addClass(skin_class);\r\n\t\t\tace.data.set('skin', skin_class);\r\n\t\t\t//save the selected skin to cookies\r\n\t\t\t//which can later be used by your server side app to set the skin\r\n\t\t\t//for example: <body class=\"<?php echo $_COOKIE['ace_skin']; ?>\"\r\n\t\t//} else ace.data.remove('skin');\r\n\t\t\r\n\t\tvar skin3_colors = ['red', 'blue', 'green', ''];\r\n\r\n\t\t\r\n\t\t\t//undo skin-1\r\n\t\t\t$('.ace-nav > li.grey').removeClass('dark');\r\n\t\t\t\r\n\t\t\t//undo skin-2\r\n\t\t\t$('.ace-nav > li').removeClass('no-border margin-1');\r\n\t\t\t$('.ace-nav > li:not(:last-child)').removeClass('light-pink').find('> a > '+ace.vars['.icon']).removeClass('pink').end().eq(0).find('.badge').removeClass('badge-warning');\r\n\t\t\t$('.sidebar-shortcuts .btn')\r\n\t\t\t.removeClass('btn-pink btn-white')\r\n\t\t\t.find(ace.vars['.icon']).removeClass('white');\r\n\t\t\t\r\n\t\t\t//undo skin-3\r\n\t\t\t$('.ace-nav > li.grey').removeClass('red').find('.badge').removeClass('badge-yellow');\r\n\t\t\t$('.sidebar-shortcuts .btn').removeClass('btn-primary btn-white')\r\n\t\t\tvar i = 0;\r\n\t\t\t$('.sidebar-shortcuts .btn').each(function() {\r\n\t\t\t\t$(this).find(ace.vars['.icon']).removeClass(skin3_colors[i++]);\r\n\t\t\t})\r\n\t\t\r\n\t\t\r\n\r\n\t\t\r\n\t\tvar skin0_buttons = ['btn-success', 'btn-info', 'btn-warning', 'btn-danger'];\r\n\t\tif(skin_class == 'no-skin') {\r\n\t\t\tvar i = 0;\r\n\t\t\t$('.sidebar-shortcuts .btn').each(function() {\r\n\t\t\t\t$(this).attr('class', 'btn ' + skin0_buttons[i++%4]);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t$('.sidebar[data-sidebar-scroll=true]').ace_sidebar_scroll('updateStyle', '');\r\n\t\t\t$('.sidebar[data-sidebar-hover=true]').ace_sidebar_hover('updateStyle', 'no-track scroll-thin');\r\n\t\t}\r\n\r\n\t\telse if(skin_class == 'skin-1') {\r\n\t\t\t$('.ace-nav > li.grey').addClass('dark');\r\n\t\t\tvar i = 0;\r\n\t\t\t$('.sidebar-shortcuts')\r\n\t\t\t.find('.btn').each(function() {\r\n\t\t\t\t$(this).attr('class', 'btn ' + skin0_buttons[i++%4]);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t$('.sidebar[data-sidebar-scroll=true]').ace_sidebar_scroll('updateStyle', 'scroll-white no-track');\r\n\t\t\t$('.sidebar[data-sidebar-hover=true]').ace_sidebar_hover('updateStyle', 'no-track scroll-thin scroll-white');\r\n\t\t}\r\n\r\n\t\telse if(skin_class == 'skin-2') {\r\n\t\t\t$('.ace-nav > li').addClass('no-border margin-1');\r\n\t\t\t$('.ace-nav > li:not(:last-child)').addClass('light-pink').find('> a > '+ace.vars['.icon']).addClass('pink').end().eq(0).find('.badge').addClass('badge-warning');\r\n\t\t\t\r\n\t\t\t$('.sidebar-shortcuts .btn').attr('class', 'btn btn-white btn-pink')\r\n\t\t\t.find(ace.vars['.icon']).addClass('white');\r\n\t\t\t\r\n\t\t\t$('.sidebar[data-sidebar-scroll=true]').ace_sidebar_scroll('updateStyle', 'scroll-white no-track');\r\n\t\t\t$('.sidebar[data-sidebar-hover=true]').ace_sidebar_hover('updateStyle', 'no-track scroll-thin scroll-white');\r\n\t\t}\r\n\r\n\t\t//skin-3\r\n\t\t//change shortcut buttons classes, this should be hard-coded if you want to choose this skin\r\n\t\telse if(skin_class == 'skin-3') {\r\n\t\t\tbody.addClass('no-skin');//because skin-3 has many parts of no-skin as well\r\n\t\t\t\r\n\t\t\t$('.ace-nav > li.grey').addClass('red').find('.badge').addClass('badge-yellow');\r\n\t\t\t\r\n\t\t\tvar i = 0;\r\n\t\t\t$('.sidebar-shortcuts .btn').each(function() {\r\n\t\t\t\t$(this).attr('class', 'btn btn-primary btn-white');\r\n\t\t\t\t$(this).find(ace.vars['.icon']).addClass(skin3_colors[i++]);\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t$('.sidebar[data-sidebar-scroll=true]').ace_sidebar_scroll('updateStyle', 'scroll-dark no-track');\r\n\t\t\t$('.sidebar[data-sidebar-hover=true]').ace_sidebar_hover('updateStyle', 'no-track scroll-thin');\r\n\t\t}\r\n\r\n\t\t//some sizing differences may be there in skins, so reset scrollbar size\r\n\t\t$('.sidebar[data-sidebar-scroll=true]').ace_sidebar_scroll('reset')\r\n\t\t//$('.sidebar[data-sidebar-hover=true]').ace_sidebar_hover('reset')\r\n\t\t\r\n\t\tif(ace.vars['old_ie']) ace.helper.redraw(document.body, true);\r\n\t}\r\n\r\n })\r\n})(jQuery);"],"sourceRoot":"/source/"}